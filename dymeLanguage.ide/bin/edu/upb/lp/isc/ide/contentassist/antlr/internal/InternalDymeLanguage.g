/*
 * generated by Xtext 2.26.0
 */
grammar InternalDymeLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.upb.lp.isc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.upb.lp.isc.services.DymeLanguageGrammarAccess;

}
@parser::members {
	private DymeLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(DymeLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFuncion
entryRuleFuncion
:
{ before(grammarAccess.getFuncionRule()); }
	 ruleFuncion
{ after(grammarAccess.getFuncionRule()); } 
	 EOF 
;

// Rule Funcion
ruleFuncion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncionAccess().getGroup()); }
		(rule__Funcion__Group__0)
		{ after(grammarAccess.getFuncionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlamadoFunc
entryRuleLlamadoFunc
:
{ before(grammarAccess.getLlamadoFuncRule()); }
	 ruleLlamadoFunc
{ after(grammarAccess.getLlamadoFuncRule()); } 
	 EOF 
;

// Rule LlamadoFunc
ruleLlamadoFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlamadoFuncAccess().getGroup()); }
		(rule__LlamadoFunc__Group__0)
		{ after(grammarAccess.getLlamadoFuncAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getGroup()); }
		(rule__Param__Group__0)
		{ after(grammarAccess.getParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipo
entryRuleTipo
:
{ before(grammarAccess.getTipoRule()); }
	 ruleTipo
{ after(grammarAccess.getTipoRule()); } 
	 EOF 
;

// Rule Tipo
ruleTipo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoAccess().getAlternatives()); }
		(rule__Tipo__Alternatives)
		{ after(grammarAccess.getTipoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruccion
entryRuleInstruccion
:
{ before(grammarAccess.getInstruccionRule()); }
	 ruleInstruccion
{ after(grammarAccess.getInstruccionRule()); } 
	 EOF 
;

// Rule Instruccion
ruleInstruccion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstruccionAccess().getAsignacionParserRuleCall()); }
		ruleAsignacion
		{ after(grammarAccess.getInstruccionAccess().getAsignacionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsignacion
entryRuleAsignacion
:
{ before(grammarAccess.getAsignacionRule()); }
	 ruleAsignacion
{ after(grammarAccess.getAsignacionRule()); } 
	 EOF 
;

// Rule Asignacion
ruleAsignacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsignacionAccess().getGroup()); }
		(rule__Asignacion__Group__0)
		{ after(grammarAccess.getAsignacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresion
entryRuleExpresion
:
{ before(grammarAccess.getExpresionRule()); }
	 ruleExpresion
{ after(grammarAccess.getExpresionRule()); } 
	 EOF 
;

// Rule Expresion
ruleExpresion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionAccess().getAlternatives()); }
		(rule__Expresion__Alternatives)
		{ after(grammarAccess.getExpresionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuma
entryRuleSuma
:
{ before(grammarAccess.getSumaRule()); }
	 ruleSuma
{ after(grammarAccess.getSumaRule()); } 
	 EOF 
;

// Rule Suma
ruleSuma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumaAccess().getGroup()); }
		(rule__Suma__Group__0)
		{ after(grammarAccess.getSumaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimple
entryRuleExprSimple
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
		(rule__ExprSimple__Alternatives)
		{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlaneta
entryRulePlaneta
:
{ before(grammarAccess.getPlanetaRule()); }
	 rulePlaneta
{ after(grammarAccess.getPlanetaRule()); } 
	 EOF 
;

// Rule Planeta
rulePlaneta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlanetaAccess().getGroup()); }
		(rule__Planeta__Group__0)
		{ after(grammarAccess.getPlanetaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tipo__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoAccess().getPlanetaKeyword_0()); }
		'Planeta'
		{ after(grammarAccess.getTipoAccess().getPlanetaKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTipoAccess().getSTRINGKeyword_1()); }
		'STRING'
		{ after(grammarAccess.getTipoAccess().getSTRINGKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getSumaParserRuleCall_0()); }
		ruleSuma
		{ after(grammarAccess.getExpresionAccess().getSumaParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getExprSimpleParserRuleCall_1()); }
		ruleExprSimple
		{ after(grammarAccess.getExpresionAccess().getExprSimpleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getLlamadoFuncParserRuleCall_2()); }
		ruleLlamadoFunc
		{ after(grammarAccess.getExpresionAccess().getLlamadoFuncParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getXAssignment_0()); }
		(rule__ExprSimple__XAssignment_0)
		{ after(grammarAccess.getExprSimpleAccess().getXAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getPAssignment_1()); }
		(rule__ExprSimple__PAssignment_1)
		{ after(grammarAccess.getExprSimpleAccess().getPAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planeta__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitOneKeyword_0_0()); }
		'1'
		{ after(grammarAccess.getPlanetaAccess().getDigitOneKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitTwoKeyword_0_1()); }
		'2'
		{ after(grammarAccess.getPlanetaAccess().getDigitTwoKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitThreeKeyword_0_2()); }
		'3'
		{ after(grammarAccess.getPlanetaAccess().getDigitThreeKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitFourKeyword_0_3()); }
		'4'
		{ after(grammarAccess.getPlanetaAccess().getDigitFourKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitFiveKeyword_0_4()); }
		'5'
		{ after(grammarAccess.getPlanetaAccess().getDigitFiveKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitSixKeyword_0_5()); }
		'6'
		{ after(grammarAccess.getPlanetaAccess().getDigitSixKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitSevenKeyword_0_6()); }
		'7'
		{ after(grammarAccess.getPlanetaAccess().getDigitSevenKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitEightKeyword_0_7()); }
		'8'
		{ after(grammarAccess.getPlanetaAccess().getDigitEightKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitNineKeyword_0_8()); }
		'9'
		{ after(grammarAccess.getPlanetaAccess().getDigitNineKeyword_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planeta__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitZeroKeyword_1_0()); }
		'0'
		{ after(grammarAccess.getPlanetaAccess().getDigitZeroKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitOneKeyword_1_1()); }
		'1'
		{ after(grammarAccess.getPlanetaAccess().getDigitOneKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitTwoKeyword_1_2()); }
		'2'
		{ after(grammarAccess.getPlanetaAccess().getDigitTwoKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitThreeKeyword_1_3()); }
		'3'
		{ after(grammarAccess.getPlanetaAccess().getDigitThreeKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitFourKeyword_1_4()); }
		'4'
		{ after(grammarAccess.getPlanetaAccess().getDigitFourKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitFiveKeyword_1_5()); }
		'5'
		{ after(grammarAccess.getPlanetaAccess().getDigitFiveKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitSixKeyword_1_6()); }
		'6'
		{ after(grammarAccess.getPlanetaAccess().getDigitSixKeyword_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitSevenKeyword_1_7()); }
		'7'
		{ after(grammarAccess.getPlanetaAccess().getDigitSevenKeyword_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitEightKeyword_1_8()); }
		'8'
		{ after(grammarAccess.getPlanetaAccess().getDigitEightKeyword_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getPlanetaAccess().getDigitNineKeyword_1_9()); }
		'9'
		{ after(grammarAccess.getPlanetaAccess().getDigitNineKeyword_1_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__0__Impl
	rule__Funcion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getCASIMIRKeyword_0()); }
	'CASIMIR'
	{ after(grammarAccess.getFuncionAccess().getCASIMIRKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__1__Impl
	rule__Funcion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getNameAssignment_1()); }
	(rule__Funcion__NameAssignment_1)
	{ after(grammarAccess.getFuncionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__2__Impl
	rule__Funcion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getCONSUMEKeyword_2()); }
	'CONSUME'
	{ after(grammarAccess.getFuncionAccess().getCONSUMEKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__3__Impl
	rule__Funcion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_3()); }
	(rule__Funcion__Group_3__0)?
	{ after(grammarAccess.getFuncionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__4__Impl
	rule__Funcion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getCONVERGEKeyword_4()); }
	'CONVERGE'
	{ after(grammarAccess.getFuncionAccess().getCONVERGEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__5__Impl
	rule__Funcion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFuncionAccess().getInstrAssignment_5()); }
		(rule__Funcion__InstrAssignment_5)
		{ after(grammarAccess.getFuncionAccess().getInstrAssignment_5()); }
	)
	(
		{ before(grammarAccess.getFuncionAccess().getInstrAssignment_5()); }
		(rule__Funcion__InstrAssignment_5)*
		{ after(grammarAccess.getFuncionAccess().getInstrAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__6__Impl
	rule__Funcion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGUTKeyword_6()); }
	'GUT'
	{ after(grammarAccess.getFuncionAccess().getGUTKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__7__Impl
	rule__Funcion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getHyphenMinusGreaterThanSignKeyword_7()); }
	'->'
	{ after(grammarAccess.getFuncionAccess().getHyphenMinusGreaterThanSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getTipAssignment_8()); }
	(rule__Funcion__TipAssignment_8)
	{ after(grammarAccess.getFuncionAccess().getTipAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_3__0__Impl
	rule__Funcion__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParamAssignment_3_0()); }
	(rule__Funcion__ParamAssignment_3_0)
	{ after(grammarAccess.getFuncionAccess().getParamAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getGroup_3_1()); }
	(rule__Funcion__Group_3_1__0)*
	{ after(grammarAccess.getFuncionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_3_1__0__Impl
	rule__Funcion__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getDollarSignKeyword_3_1_0()); }
	'$'
	{ after(grammarAccess.getFuncionAccess().getDollarSignKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Funcion__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncionAccess().getParamAssignment_3_1_1()); }
	(rule__Funcion__ParamAssignment_3_1_1)
	{ after(grammarAccess.getFuncionAccess().getParamAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoFunc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group__0__Impl
	rule__LlamadoFunc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getFuncionAssignment_0()); }
	(rule__LlamadoFunc__FuncionAssignment_0)
	{ after(grammarAccess.getLlamadoFuncAccess().getFuncionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group__1__Impl
	rule__LlamadoFunc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getCONSUMEKeyword_1()); }
	'CONSUME'
	{ after(grammarAccess.getLlamadoFuncAccess().getCONSUMEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getGroup_2()); }
	(rule__LlamadoFunc__Group_2__0)?
	{ after(grammarAccess.getLlamadoFuncAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoFunc__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group_2__0__Impl
	rule__LlamadoFunc__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_0()); }
	(rule__LlamadoFunc__ArgsAssignment_2_0)
	{ after(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getGroup_2_1()); }
	(rule__LlamadoFunc__Group_2_1__0)*
	{ after(grammarAccess.getLlamadoFuncAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlamadoFunc__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group_2_1__0__Impl
	rule__LlamadoFunc__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getDollarSignKeyword_2_1_0()); }
	'$'
	{ after(grammarAccess.getLlamadoFuncAccess().getDollarSignKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlamadoFunc__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_1_1()); }
	(rule__LlamadoFunc__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getNameAssignment_0()); }
	(rule__Param__NameAssignment_0)
	{ after(grammarAccess.getParamAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__1__Impl
	rule__Param__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getEsKeyword_1()); }
	'es'
	{ after(grammarAccess.getParamAccess().getEsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getTipAssignment_2()); }
	(rule__Param__TipAssignment_2)
	{ after(grammarAccess.getParamAccess().getTipAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asignacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__0__Impl
	rule__Asignacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getMASAKeyword_0()); }
	'MASA'
	{ after(grammarAccess.getAsignacionAccess().getMASAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__1__Impl
	rule__Asignacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getNameAssignment_1()); }
	(rule__Asignacion__NameAssignment_1)
	{ after(grammarAccess.getAsignacionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__2__Impl
	rule__Asignacion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getGroup_2()); }
	(rule__Asignacion__Group_2__0)?
	{ after(grammarAccess.getAsignacionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__3__Impl
	rule__Asignacion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getLessThanSignHyphenMinusKeyword_3()); }
	'<-'
	{ after(grammarAccess.getAsignacionAccess().getLessThanSignHyphenMinusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getValorAssignment_4()); }
	(rule__Asignacion__ValorAssignment_4)
	{ after(grammarAccess.getAsignacionAccess().getValorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asignacion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group_2__0__Impl
	rule__Asignacion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getEsKeyword_2_0()); }
	'es'
	{ after(grammarAccess.getAsignacionAccess().getEsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asignacion__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsignacionAccess().getTipAssignment_2_1()); }
	(rule__Asignacion__TipAssignment_2_1)
	{ after(grammarAccess.getAsignacionAccess().getTipAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Suma__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Suma__Group__0__Impl
	rule__Suma__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumaAccess().getIzqAssignment_0()); }
	(rule__Suma__IzqAssignment_0)
	{ after(grammarAccess.getSumaAccess().getIzqAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Suma__Group__1__Impl
	rule__Suma__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumaAccess().getPlusSignKeyword_1()); }
	'+'
	{ after(grammarAccess.getSumaAccess().getPlusSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Suma__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumaAccess().getDerAssignment_2()); }
	(rule__Suma__DerAssignment_2)
	{ after(grammarAccess.getSumaAccess().getDerAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Planeta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planeta__Group__0__Impl
	rule__Planeta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Planeta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanetaAccess().getAlternatives_0()); }
	(rule__Planeta__Alternatives_0)
	{ after(grammarAccess.getPlanetaAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Planeta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Planeta__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Planeta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlanetaAccess().getAlternatives_1()); }
	(rule__Planeta__Alternatives_1)*
	{ after(grammarAccess.getPlanetaAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Funcion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParamAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_0_0()); }
		ruleParam
		{ after(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__ParamAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__InstrAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getInstrInstruccionParserRuleCall_5_0()); }
		ruleInstruccion
		{ after(grammarAccess.getFuncionAccess().getInstrInstruccionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Funcion__TipAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncionAccess().getTipTipoParserRuleCall_8_0()); }
		ruleTipo
		{ after(grammarAccess.getFuncionAccess().getTipTipoParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__FuncionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoFuncAccess().getFuncionFuncionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getLlamadoFuncAccess().getFuncionFuncionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLlamadoFuncAccess().getFuncionFuncionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getLlamadoFuncAccess().getFuncionFuncionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_0_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlamadoFunc__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_1_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TipAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTipTipoParserRuleCall_2_0()); }
		ruleTipo
		{ after(grammarAccess.getParamAccess().getTipTipoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAsignacionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__TipAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionAccess().getTipTipoParserRuleCall_2_1_0()); }
		ruleTipo
		{ after(grammarAccess.getAsignacionAccess().getTipTipoParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asignacion__ValorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsignacionAccess().getValorExpresionParserRuleCall_4_0()); }
		ruleExpresion
		{ after(grammarAccess.getAsignacionAccess().getValorExpresionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__IzqAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumaAccess().getIzqExprSimpleParserRuleCall_0_0()); }
		ruleExprSimple
		{ after(grammarAccess.getSumaAccess().getIzqExprSimpleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Suma__DerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumaAccess().getDerExprSimpleParserRuleCall_2_0()); }
		ruleExprSimple
		{ after(grammarAccess.getSumaAccess().getDerExprSimpleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getXSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getExprSimpleAccess().getXSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__PAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getPPlanetaParserRuleCall_1_0()); }
		rulePlaneta
		{ after(grammarAccess.getExprSimpleAccess().getPPlanetaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
