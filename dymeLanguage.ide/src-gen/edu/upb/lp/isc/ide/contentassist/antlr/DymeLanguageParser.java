/*
 * generated by Xtext 2.26.0
 */
package edu.upb.lp.isc.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import edu.upb.lp.isc.ide.contentassist.antlr.internal.InternalDymeLanguageParser;
import edu.upb.lp.isc.services.DymeLanguageGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DymeLanguageParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DymeLanguageGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DymeLanguageGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getObjetoAccess().getAlternatives(), "rule__Objeto__Alternatives");
			builder.put(grammarAccess.getPrintAccess().getPrintTipoAlternatives_0_0(), "rule__Print__PrintTipoAlternatives_0_0");
			builder.put(grammarAccess.getInstruccionesAccess().getAlternatives(), "rule__Instrucciones__Alternatives");
			builder.put(grammarAccess.getDeclaracionAccess().getAlternatives(), "rule__Declaracion__Alternatives");
			builder.put(grammarAccess.getParamAccess().getAlternatives_2(), "rule__Param__Alternatives_2");
			builder.put(grammarAccess.getValorAccess().getAlternatives(), "rule__Valor__Alternatives");
			builder.put(grammarAccess.getExpresionAccess().getAlternatives(), "rule__Expresion__Alternatives");
			builder.put(grammarAccess.getExprMapOperacionesAccess().getAlternatives(), "rule__ExprMapOperaciones__Alternatives");
			builder.put(grammarAccess.getExprConcatenacionAccess().getAlternatives(), "rule__ExprConcatenacion__Alternatives");
			builder.put(grammarAccess.getExprConcatenacionAccess().getAlternatives_1(), "rule__ExprConcatenacion__Alternatives_1");
			builder.put(grammarAccess.getExprAritmeticaAccess().getAlternatives(), "rule__ExprAritmetica__Alternatives");
			builder.put(grammarAccess.getExprAritmeticaAccess().getOperadorArAlternatives_0_1_0_0(), "rule__ExprAritmetica__OperadorArAlternatives_0_1_0_0");
			builder.put(grammarAccess.getExprAritmeticaAccess().getAlternatives_1(), "rule__ExprAritmetica__Alternatives_1");
			builder.put(grammarAccess.getExprLogicaAccess().getExprLogAlternatives_1_0(), "rule__ExprLogica__ExprLogAlternatives_1_0");
			builder.put(grammarAccess.getExprLogicaOperadoresAccess().getOperadorLogAlternatives_1_0_0(), "rule__ExprLogicaOperadores__OperadorLogAlternatives_1_0_0");
			builder.put(grammarAccess.getExprComparacionAccess().getOperadorCompAlternatives_1_0_0(), "rule__ExprComparacion__OperadorCompAlternatives_1_0_0");
			builder.put(grammarAccess.getPrimitivoAccess().getTipoAlternatives_0(), "rule__Primitivo__TipoAlternatives_0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getAlternatives_0(), "rule__TipoFuncionOrdenSuperior__Alternatives_0");
			builder.put(grammarAccess.getLunaAccess().getXAlternatives_0(), "rule__Luna__XAlternatives_0");
			builder.put(grammarAccess.getProgramaAccess().getGroup(), "rule__Programa__Group__0");
			builder.put(grammarAccess.getPrintAccess().getGroup(), "rule__Print__Group__0");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getGroup(), "rule__EstrellaFugazMeteoro__Group__0");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getGroup_0(), "rule__EstrellaFugazMeteoro__Group_0__0");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getGroup_1(), "rule__EstrellaFugazMeteoro__Group_1__0");
			builder.put(grammarAccess.getLlamadoFuncAccess().getGroup(), "rule__LlamadoFunc__Group__0");
			builder.put(grammarAccess.getLlamadoFuncAccess().getGroup_2(), "rule__LlamadoFunc__Group_2__0");
			builder.put(grammarAccess.getLlamadoFuncAccess().getGroup_2_1(), "rule__LlamadoFunc__Group_2_1__0");
			builder.put(grammarAccess.getLlamadoMapaAccess().getGroup(), "rule__LlamadoMapa__Group__0");
			builder.put(grammarAccess.getFuncionAccess().getGroup(), "rule__Funcion__Group__0");
			builder.put(grammarAccess.getFuncionAccess().getGroup_0(), "rule__Funcion__Group_0__0");
			builder.put(grammarAccess.getFuncionAccess().getGroup_3(), "rule__Funcion__Group_3__0");
			builder.put(grammarAccess.getFuncionAccess().getGroup_3_2(), "rule__Funcion__Group_3_2__0");
			builder.put(grammarAccess.getFuncionAccess().getGroup_8(), "rule__Funcion__Group_8__0");
			builder.put(grammarAccess.getAsignacionAccess().getGroup(), "rule__Asignacion__Group__0");
			builder.put(grammarAccess.getAsignacionAccess().getGroup_2(), "rule__Asignacion__Group_2__0");
			builder.put(grammarAccess.getParamAccess().getGroup(), "rule__Param__Group__0");
			builder.put(grammarAccess.getParamAccess().getGroup_2_0(), "rule__Param__Group_2_0__0");
			builder.put(grammarAccess.getParamAccess().getGroup_2_0_1(), "rule__Param__Group_2_0_1__0");
			builder.put(grammarAccess.getParamAccess().getGroup_2_0_1_1(), "rule__Param__Group_2_0_1_1__0");
			builder.put(grammarAccess.getParamAccess().getGroup_3(), "rule__Param__Group_3__0");
			builder.put(grammarAccess.getMapAddAccess().getGroup(), "rule__MapAdd__Group__0");
			builder.put(grammarAccess.getMapAddAccess().getGroup_4(), "rule__MapAdd__Group_4__0");
			builder.put(grammarAccess.getMapAddAccess().getGroup_6(), "rule__MapAdd__Group_6__0");
			builder.put(grammarAccess.getMapRemoveAccess().getGroup(), "rule__MapRemove__Group__0");
			builder.put(grammarAccess.getMapRemoveAccess().getGroup_6(), "rule__MapRemove__Group_6__0");
			builder.put(grammarAccess.getExprConcatenacionAccess().getGroup_0(), "rule__ExprConcatenacion__Group_0__0");
			builder.put(grammarAccess.getExprConcatenacionAccess().getGroup_0_1(), "rule__ExprConcatenacion__Group_0_1__0");
			builder.put(grammarAccess.getExprAritmeticaAccess().getGroup_0(), "rule__ExprAritmetica__Group_0__0");
			builder.put(grammarAccess.getExprAritmeticaAccess().getGroup_0_1(), "rule__ExprAritmetica__Group_0_1__0");
			builder.put(grammarAccess.getExprLogicaAccess().getGroup(), "rule__ExprLogica__Group__0");
			builder.put(grammarAccess.getExprLogicaOperadoresAccess().getGroup(), "rule__ExprLogicaOperadores__Group__0");
			builder.put(grammarAccess.getExprLogicaOperadoresAccess().getGroup_1(), "rule__ExprLogicaOperadores__Group_1__0");
			builder.put(grammarAccess.getXORAccess().getGroup(), "rule__XOR__Group__0");
			builder.put(grammarAccess.getXORAccess().getGroup_1(), "rule__XOR__Group_1__0");
			builder.put(grammarAccess.getExprComparacionAccess().getGroup(), "rule__ExprComparacion__Group__0");
			builder.put(grammarAccess.getExprComparacionAccess().getGroup_1(), "rule__ExprComparacion__Group_1__0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getGroup(), "rule__TipoFuncionOrdenSuperior__Group__0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getGroup_0_0(), "rule__TipoFuncionOrdenSuperior__Group_0_0__0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getGroup_0_0_1(), "rule__TipoFuncionOrdenSuperior__Group_0_0_1__0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getGroup_0_0_1_1(), "rule__TipoFuncionOrdenSuperior__Group_0_0_1_1__0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getGroup_1(), "rule__TipoFuncionOrdenSuperior__Group_1__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getCalistoMapTipoAccess().getGroup(), "rule__CalistoMapTipo__Group__0");
			builder.put(grammarAccess.getCalistoMapTipoAccess().getGroup_2(), "rule__CalistoMapTipo__Group_2__0");
			builder.put(grammarAccess.getCalistoMapValorAccess().getGroup(), "rule__CalistoMapValor__Group__0");
			builder.put(grammarAccess.getCalistoMapValorAccess().getGroup_3(), "rule__CalistoMapValor__Group_3__0");
			builder.put(grammarAccess.getCalistoMapValorAccess().getGroup_3_0(), "rule__CalistoMapValor__Group_3_0__0");
			builder.put(grammarAccess.getCalistoMapValorAccess().getGroup_3_1(), "rule__CalistoMapValor__Group_3_1__0");
			builder.put(grammarAccess.getProgramaAccess().getNameAssignment_1(), "rule__Programa__NameAssignment_1");
			builder.put(grammarAccess.getProgramaAccess().getProgAssignment_2(), "rule__Programa__ProgAssignment_2");
			builder.put(grammarAccess.getPrintAccess().getPrintTipoAssignment_0(), "rule__Print__PrintTipoAssignment_0");
			builder.put(grammarAccess.getPrintAccess().getValAssignment_2(), "rule__Print__ValAssignment_2");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getExprLogCondicionAssignment_0_2(), "rule__EstrellaFugazMeteoro__ExprLogCondicionAssignment_0_2");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getEstrellaFugazResAssignment_0_4(), "rule__EstrellaFugazMeteoro__EstrellaFugazResAssignment_0_4");
			builder.put(grammarAccess.getEstrellaFugazMeteoroAccess().getMeteoroResAssignment_1_1(), "rule__EstrellaFugazMeteoro__MeteoroResAssignment_1_1");
			builder.put(grammarAccess.getLlamadoFuncAccess().getFuncionIDAssignment_0(), "rule__LlamadoFunc__FuncionIDAssignment_0");
			builder.put(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_0(), "rule__LlamadoFunc__ArgsAssignment_2_0");
			builder.put(grammarAccess.getLlamadoFuncAccess().getArgsAssignment_2_1_1(), "rule__LlamadoFunc__ArgsAssignment_2_1_1");
			builder.put(grammarAccess.getLlamadoMapaAccess().getDecIDAssignment_0(), "rule__LlamadoMapa__DecIDAssignment_0");
			builder.put(grammarAccess.getLlamadoMapaAccess().getMapKeyAssignment_2(), "rule__LlamadoMapa__MapKeyAssignment_2");
			builder.put(grammarAccess.getFuncionAccess().getGusanoAssignment_0_0(), "rule__Funcion__GusanoAssignment_0_0");
			builder.put(grammarAccess.getFuncionAccess().getNameAssignment_2(), "rule__Funcion__NameAssignment_2");
			builder.put(grammarAccess.getFuncionAccess().getParamAssignment_3_1(), "rule__Funcion__ParamAssignment_3_1");
			builder.put(grammarAccess.getFuncionAccess().getParamAssignment_3_2_1(), "rule__Funcion__ParamAssignment_3_2_1");
			builder.put(grammarAccess.getFuncionAccess().getDeclarAssignment_5(), "rule__Funcion__DeclarAssignment_5");
			builder.put(grammarAccess.getFuncionAccess().getValAssignment_6(), "rule__Funcion__ValAssignment_6");
			builder.put(grammarAccess.getFuncionAccess().getTipoInferidoAssignment_8_0(), "rule__Funcion__TipoInferidoAssignment_8_0");
			builder.put(grammarAccess.getFuncionAccess().getTipoClassAssignment_8_1(), "rule__Funcion__TipoClassAssignment_8_1");
			builder.put(grammarAccess.getAsignacionAccess().getNameAssignment_1(), "rule__Asignacion__NameAssignment_1");
			builder.put(grammarAccess.getAsignacionAccess().getTipoInferidoAssignment_2_0(), "rule__Asignacion__TipoInferidoAssignment_2_0");
			builder.put(grammarAccess.getAsignacionAccess().getTipoClassAssignment_2_1(), "rule__Asignacion__TipoClassAssignment_2_1");
			builder.put(grammarAccess.getAsignacionAccess().getValorAsigAssignment_4(), "rule__Asignacion__ValorAsigAssignment_4");
			builder.put(grammarAccess.getParamAccess().getNameAssignment_0(), "rule__Param__NameAssignment_0");
			builder.put(grammarAccess.getParamAccess().getParamAssignment_2_0_1_0(), "rule__Param__ParamAssignment_2_0_1_0");
			builder.put(grammarAccess.getParamAccess().getParamAssignment_2_0_1_1_1(), "rule__Param__ParamAssignment_2_0_1_1_1");
			builder.put(grammarAccess.getParamAccess().getParamAssignment_2_1(), "rule__Param__ParamAssignment_2_1");
			builder.put(grammarAccess.getParamAccess().getTipoRetornoAssignment_3_0(), "rule__Param__TipoRetornoAssignment_3_0");
			builder.put(grammarAccess.getParamAccess().getReturnTipoAssignment_3_1(), "rule__Param__ReturnTipoAssignment_3_1");
			builder.put(grammarAccess.getConstanteAccess().getNombreAssignment(), "rule__Constante__NombreAssignment");
			builder.put(grammarAccess.getMapAddAccess().getOperadorAddAssignment_1(), "rule__MapAdd__OperadorAddAssignment_1");
			builder.put(grammarAccess.getMapAddAccess().getMapConstAssignment_2(), "rule__MapAdd__MapConstAssignment_2");
			builder.put(grammarAccess.getMapAddAccess().getKeyAssignment_4_0(), "rule__MapAdd__KeyAssignment_4_0");
			builder.put(grammarAccess.getMapAddAccess().getValueAssignment_4_2(), "rule__MapAdd__ValueAssignment_4_2");
			builder.put(grammarAccess.getMapAddAccess().getKeyAssignment_6_1(), "rule__MapAdd__KeyAssignment_6_1");
			builder.put(grammarAccess.getMapAddAccess().getValueAssignment_6_3(), "rule__MapAdd__ValueAssignment_6_3");
			builder.put(grammarAccess.getMapRemoveAccess().getOperadorAddAssignment_1(), "rule__MapRemove__OperadorAddAssignment_1");
			builder.put(grammarAccess.getMapRemoveAccess().getMapConstAssignment_2(), "rule__MapRemove__MapConstAssignment_2");
			builder.put(grammarAccess.getMapRemoveAccess().getKeyAssignment_4(), "rule__MapRemove__KeyAssignment_4");
			builder.put(grammarAccess.getMapRemoveAccess().getKeyAssignment_6_1(), "rule__MapRemove__KeyAssignment_6_1");
			builder.put(grammarAccess.getExprConcatenacionAccess().getOperadorConAssignment_0_1_0(), "rule__ExprConcatenacion__OperadorConAssignment_0_1_0");
			builder.put(grammarAccess.getExprConcatenacionAccess().getExprConAssignment_0_1_1(), "rule__ExprConcatenacion__ExprConAssignment_0_1_1");
			builder.put(grammarAccess.getExprAritmeticaAccess().getOperadorArAssignment_0_1_0(), "rule__ExprAritmetica__OperadorArAssignment_0_1_0");
			builder.put(grammarAccess.getExprAritmeticaAccess().getExprArAssignment_0_1_1(), "rule__ExprAritmetica__ExprArAssignment_0_1_1");
			builder.put(grammarAccess.getExprLogicaAccess().getNegadoAssignment_0(), "rule__ExprLogica__NegadoAssignment_0");
			builder.put(grammarAccess.getExprLogicaAccess().getExprLogAssignment_1(), "rule__ExprLogica__ExprLogAssignment_1");
			builder.put(grammarAccess.getExprLogicaOperadoresAccess().getOperadorLogAssignment_1_0(), "rule__ExprLogicaOperadores__OperadorLogAssignment_1_0");
			builder.put(grammarAccess.getExprLogicaOperadoresAccess().getExprLogsAssignment_1_1(), "rule__ExprLogicaOperadores__ExprLogsAssignment_1_1");
			builder.put(grammarAccess.getXORAccess().getOperadorXORAssignment_1_0(), "rule__XOR__OperadorXORAssignment_1_0");
			builder.put(grammarAccess.getXORAccess().getExprLogIzqAssignment_1_1(), "rule__XOR__ExprLogIzqAssignment_1_1");
			builder.put(grammarAccess.getXORAccess().getExprLogDerAssignment_1_2(), "rule__XOR__ExprLogDerAssignment_1_2");
			builder.put(grammarAccess.getExprComparacionAccess().getOperadorCompAssignment_1_0(), "rule__ExprComparacion__OperadorCompAssignment_1_0");
			builder.put(grammarAccess.getExprComparacionAccess().getExprComIzqAssignment_1_1(), "rule__ExprComparacion__ExprComIzqAssignment_1_1");
			builder.put(grammarAccess.getExprComparacionAccess().getExprComDerAssignment_1_2(), "rule__ExprComparacion__ExprComDerAssignment_1_2");
			builder.put(grammarAccess.getPrimitivoAccess().getTipoAssignment(), "rule__Primitivo__TipoAssignment");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getOrdenSuperiorTipoAssignment_0_0_0(), "rule__TipoFuncionOrdenSuperior__OrdenSuperiorTipoAssignment_0_0_0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getParamFuncAssignment_0_0_1_0(), "rule__TipoFuncionOrdenSuperior__ParamFuncAssignment_0_0_1_0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getParamFuncAssignment_0_0_1_1_1(), "rule__TipoFuncionOrdenSuperior__ParamFuncAssignment_0_0_1_1_1");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getReturnTipoFuncAssignment_1_0(), "rule__TipoFuncionOrdenSuperior__ReturnTipoFuncAssignment_1_0");
			builder.put(grammarAccess.getTipoFuncionOrdenSuperiorAccess().getReturnFuncAssignment_1_1(), "rule__TipoFuncionOrdenSuperior__ReturnFuncAssignment_1_1");
			builder.put(grammarAccess.getPlanetaAccess().getXAssignment(), "rule__Planeta__XAssignment");
			builder.put(grammarAccess.getConstelacionAccess().getXAssignment(), "rule__Constelacion__XAssignment");
			builder.put(grammarAccess.getEstrellaAccess().getXAssignment(), "rule__Estrella__XAssignment");
			builder.put(grammarAccess.getPolvoEstelarAccess().getXAssignment(), "rule__PolvoEstelar__XAssignment");
			builder.put(grammarAccess.getLunaAccess().getXAssignment(), "rule__Luna__XAssignment");
			builder.put(grammarAccess.getCalistoMapTipoAccess().getTipoIzqAssignment_2_0(), "rule__CalistoMapTipo__TipoIzqAssignment_2_0");
			builder.put(grammarAccess.getCalistoMapTipoAccess().getTipoDerAssignment_2_2(), "rule__CalistoMapTipo__TipoDerAssignment_2_2");
			builder.put(grammarAccess.getCalistoMapValorAccess().getKeyAssignment_3_0_0(), "rule__CalistoMapValor__KeyAssignment_3_0_0");
			builder.put(grammarAccess.getCalistoMapValorAccess().getValueAssignment_3_0_2(), "rule__CalistoMapValor__ValueAssignment_3_0_2");
			builder.put(grammarAccess.getCalistoMapValorAccess().getKeyAssignment_3_1_1(), "rule__CalistoMapValor__KeyAssignment_3_1_1");
			builder.put(grammarAccess.getCalistoMapValorAccess().getValueAssignment_3_1_3(), "rule__CalistoMapValor__ValueAssignment_3_1_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DymeLanguageGrammarAccess grammarAccess;

	@Override
	protected InternalDymeLanguageParser createParser() {
		InternalDymeLanguageParser result = new InternalDymeLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DymeLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DymeLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
