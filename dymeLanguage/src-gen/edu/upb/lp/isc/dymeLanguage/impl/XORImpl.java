/**
 * generated by Xtext 2.26.0
 */
package edu.upb.lp.isc.dymeLanguage.impl;

import edu.upb.lp.isc.dymeLanguage.DymeLanguagePackage;
import edu.upb.lp.isc.dymeLanguage.Expresion;
import edu.upb.lp.isc.dymeLanguage.XOR;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XOR</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.XORImpl#getOperadorXOR <em>Operador XOR</em>}</li>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.XORImpl#getExprLogIzq <em>Expr Log Izq</em>}</li>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.XORImpl#getExprLogDer <em>Expr Log Der</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XORImpl extends MinimalEObjectImpl.Container implements XOR
{
  /**
   * The default value of the '{@link #getOperadorXOR() <em>Operador XOR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperadorXOR()
   * @generated
   * @ordered
   */
  protected static final String OPERADOR_XOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOperadorXOR() <em>Operador XOR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperadorXOR()
   * @generated
   * @ordered
   */
  protected String operadorXOR = OPERADOR_XOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getExprLogIzq() <em>Expr Log Izq</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprLogIzq()
   * @generated
   * @ordered
   */
  protected Expresion exprLogIzq;

  /**
   * The cached value of the '{@link #getExprLogDer() <em>Expr Log Der</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprLogDer()
   * @generated
   * @ordered
   */
  protected Expresion exprLogDer;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XORImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DymeLanguagePackage.Literals.XOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOperadorXOR()
  {
    return operadorXOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperadorXOR(String newOperadorXOR)
  {
    String oldOperadorXOR = operadorXOR;
    operadorXOR = newOperadorXOR;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.XOR__OPERADOR_XOR, oldOperadorXOR, operadorXOR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expresion getExprLogIzq()
  {
    return exprLogIzq;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprLogIzq(Expresion newExprLogIzq, NotificationChain msgs)
  {
    Expresion oldExprLogIzq = exprLogIzq;
    exprLogIzq = newExprLogIzq;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.XOR__EXPR_LOG_IZQ, oldExprLogIzq, newExprLogIzq);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprLogIzq(Expresion newExprLogIzq)
  {
    if (newExprLogIzq != exprLogIzq)
    {
      NotificationChain msgs = null;
      if (exprLogIzq != null)
        msgs = ((InternalEObject)exprLogIzq).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.XOR__EXPR_LOG_IZQ, null, msgs);
      if (newExprLogIzq != null)
        msgs = ((InternalEObject)newExprLogIzq).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.XOR__EXPR_LOG_IZQ, null, msgs);
      msgs = basicSetExprLogIzq(newExprLogIzq, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.XOR__EXPR_LOG_IZQ, newExprLogIzq, newExprLogIzq));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expresion getExprLogDer()
  {
    return exprLogDer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprLogDer(Expresion newExprLogDer, NotificationChain msgs)
  {
    Expresion oldExprLogDer = exprLogDer;
    exprLogDer = newExprLogDer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.XOR__EXPR_LOG_DER, oldExprLogDer, newExprLogDer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprLogDer(Expresion newExprLogDer)
  {
    if (newExprLogDer != exprLogDer)
    {
      NotificationChain msgs = null;
      if (exprLogDer != null)
        msgs = ((InternalEObject)exprLogDer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.XOR__EXPR_LOG_DER, null, msgs);
      if (newExprLogDer != null)
        msgs = ((InternalEObject)newExprLogDer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.XOR__EXPR_LOG_DER, null, msgs);
      msgs = basicSetExprLogDer(newExprLogDer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.XOR__EXPR_LOG_DER, newExprLogDer, newExprLogDer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.XOR__EXPR_LOG_IZQ:
        return basicSetExprLogIzq(null, msgs);
      case DymeLanguagePackage.XOR__EXPR_LOG_DER:
        return basicSetExprLogDer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.XOR__OPERADOR_XOR:
        return getOperadorXOR();
      case DymeLanguagePackage.XOR__EXPR_LOG_IZQ:
        return getExprLogIzq();
      case DymeLanguagePackage.XOR__EXPR_LOG_DER:
        return getExprLogDer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.XOR__OPERADOR_XOR:
        setOperadorXOR((String)newValue);
        return;
      case DymeLanguagePackage.XOR__EXPR_LOG_IZQ:
        setExprLogIzq((Expresion)newValue);
        return;
      case DymeLanguagePackage.XOR__EXPR_LOG_DER:
        setExprLogDer((Expresion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.XOR__OPERADOR_XOR:
        setOperadorXOR(OPERADOR_XOR_EDEFAULT);
        return;
      case DymeLanguagePackage.XOR__EXPR_LOG_IZQ:
        setExprLogIzq((Expresion)null);
        return;
      case DymeLanguagePackage.XOR__EXPR_LOG_DER:
        setExprLogDer((Expresion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.XOR__OPERADOR_XOR:
        return OPERADOR_XOR_EDEFAULT == null ? operadorXOR != null : !OPERADOR_XOR_EDEFAULT.equals(operadorXOR);
      case DymeLanguagePackage.XOR__EXPR_LOG_IZQ:
        return exprLogIzq != null;
      case DymeLanguagePackage.XOR__EXPR_LOG_DER:
        return exprLogDer != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (operadorXOR: ");
    result.append(operadorXOR);
    result.append(')');
    return result.toString();
  }

} //XORImpl
