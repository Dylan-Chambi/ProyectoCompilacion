/**
 * generated by Xtext 2.26.0
 */
package edu.upb.lp.isc.dymeLanguage.impl;

import edu.upb.lp.isc.dymeLanguage.DymeLanguagePackage;
import edu.upb.lp.isc.dymeLanguage.ExprLogica;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Logica</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.ExprLogicaImpl#isNegado <em>Negado</em>}</li>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.ExprLogicaImpl#getExprLog <em>Expr Log</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprLogicaImpl extends ExpresionImpl implements ExprLogica
{
  /**
   * The default value of the '{@link #isNegado() <em>Negado</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegado()
   * @generated
   * @ordered
   */
  protected static final boolean NEGADO_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNegado() <em>Negado</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNegado()
   * @generated
   * @ordered
   */
  protected boolean negado = NEGADO_EDEFAULT;

  /**
   * The cached value of the '{@link #getExprLog() <em>Expr Log</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprLog()
   * @generated
   * @ordered
   */
  protected EObject exprLog;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprLogicaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DymeLanguagePackage.Literals.EXPR_LOGICA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNegado()
  {
    return negado;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNegado(boolean newNegado)
  {
    boolean oldNegado = negado;
    negado = newNegado;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.EXPR_LOGICA__NEGADO, oldNegado, negado));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getExprLog()
  {
    return exprLog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprLog(EObject newExprLog, NotificationChain msgs)
  {
    EObject oldExprLog = exprLog;
    exprLog = newExprLog;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG, oldExprLog, newExprLog);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprLog(EObject newExprLog)
  {
    if (newExprLog != exprLog)
    {
      NotificationChain msgs = null;
      if (exprLog != null)
        msgs = ((InternalEObject)exprLog).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG, null, msgs);
      if (newExprLog != null)
        msgs = ((InternalEObject)newExprLog).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG, null, msgs);
      msgs = basicSetExprLog(newExprLog, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG, newExprLog, newExprLog));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG:
        return basicSetExprLog(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_LOGICA__NEGADO:
        return isNegado();
      case DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG:
        return getExprLog();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_LOGICA__NEGADO:
        setNegado((Boolean)newValue);
        return;
      case DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG:
        setExprLog((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_LOGICA__NEGADO:
        setNegado(NEGADO_EDEFAULT);
        return;
      case DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG:
        setExprLog((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_LOGICA__NEGADO:
        return negado != NEGADO_EDEFAULT;
      case DymeLanguagePackage.EXPR_LOGICA__EXPR_LOG:
        return exprLog != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Negado: ");
    result.append(negado);
    result.append(')');
    return result.toString();
  }

} //ExprLogicaImpl
