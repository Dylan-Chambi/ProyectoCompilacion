/**
 * generated by Xtext 2.26.0
 */
package edu.upb.lp.isc.dymeLanguage.impl;

import edu.upb.lp.isc.dymeLanguage.DymeLanguagePackage;
import edu.upb.lp.isc.dymeLanguage.ExprAritmetica;
import edu.upb.lp.isc.dymeLanguage.Expresion;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Aritmetica</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.ExprAritmeticaImpl#getOperadorAr <em>Operador Ar</em>}</li>
 *   <li>{@link edu.upb.lp.isc.dymeLanguage.impl.ExprAritmeticaImpl#getExprAr <em>Expr Ar</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprAritmeticaImpl extends ExpresionImpl implements ExprAritmetica
{
  /**
   * The default value of the '{@link #getOperadorAr() <em>Operador Ar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperadorAr()
   * @generated
   * @ordered
   */
  protected static final String OPERADOR_AR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOperadorAr() <em>Operador Ar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperadorAr()
   * @generated
   * @ordered
   */
  protected String operadorAr = OPERADOR_AR_EDEFAULT;

  /**
   * The cached value of the '{@link #getExprAr() <em>Expr Ar</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprAr()
   * @generated
   * @ordered
   */
  protected EList<Expresion> exprAr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprAritmeticaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DymeLanguagePackage.Literals.EXPR_ARITMETICA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOperadorAr()
  {
    return operadorAr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperadorAr(String newOperadorAr)
  {
    String oldOperadorAr = operadorAr;
    operadorAr = newOperadorAr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DymeLanguagePackage.EXPR_ARITMETICA__OPERADOR_AR, oldOperadorAr, operadorAr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Expresion> getExprAr()
  {
    if (exprAr == null)
    {
      exprAr = new EObjectContainmentEList<Expresion>(Expresion.class, this, DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR);
    }
    return exprAr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR:
        return ((InternalEList<?>)getExprAr()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_ARITMETICA__OPERADOR_AR:
        return getOperadorAr();
      case DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR:
        return getExprAr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_ARITMETICA__OPERADOR_AR:
        setOperadorAr((String)newValue);
        return;
      case DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR:
        getExprAr().clear();
        getExprAr().addAll((Collection<? extends Expresion>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_ARITMETICA__OPERADOR_AR:
        setOperadorAr(OPERADOR_AR_EDEFAULT);
        return;
      case DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR:
        getExprAr().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DymeLanguagePackage.EXPR_ARITMETICA__OPERADOR_AR:
        return OPERADOR_AR_EDEFAULT == null ? operadorAr != null : !OPERADOR_AR_EDEFAULT.equals(operadorAr);
      case DymeLanguagePackage.EXPR_ARITMETICA__EXPR_AR:
        return exprAr != null && !exprAr.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (operadorAr: ");
    result.append(operadorAr);
    result.append(')');
    return result.toString();
  }

} //ExprAritmeticaImpl
