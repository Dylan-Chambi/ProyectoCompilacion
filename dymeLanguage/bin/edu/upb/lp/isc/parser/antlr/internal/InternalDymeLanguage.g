/*
 * generated by Xtext 2.26.0
 */
grammar InternalDymeLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.upb.lp.isc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.upb.lp.isc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.upb.lp.isc.services.DymeLanguageGrammarAccess;

}

@parser::members {

 	private DymeLanguageGrammarAccess grammarAccess;

    public InternalDymeLanguageParser(TokenStream input, DymeLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programa";
   	}

   	@Override
   	protected DymeLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePrograma
entryRulePrograma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramaRule()); }
	iv_rulePrograma=rulePrograma
	{ $current=$iv_rulePrograma.current; }
	EOF;

// Rule Programa
rulePrograma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramaAccess().getFuncFuncionParserRuleCall_0());
			}
			lv_func_0_0=ruleFuncion
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramaRule());
				}
				add(
					$current,
					"func",
					lv_func_0_0,
					"edu.upb.lp.isc.DymeLanguage.Funcion");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleFuncion
entryRuleFuncion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncionRule()); }
	iv_ruleFuncion=ruleFuncion
	{ $current=$iv_ruleFuncion.current; }
	EOF;

// Rule Funcion
ruleFuncion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CASIMIR'
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncionAccess().getCASIMIRKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='NECESITA'
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncionAccess().getNECESITAKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_0_0());
					}
					lv_param_3_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncionRule());
						}
						add(
							$current,
							"param",
							lv_param_3_0,
							"edu.upb.lp.isc.DymeLanguage.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='$'
				{
					newLeafNode(otherlv_4, grammarAccess.getFuncionAccess().getDollarSignKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncionAccess().getParamParamParserRuleCall_3_1_1_0());
						}
						lv_param_5_0=ruleParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_0,
								"edu.upb.lp.isc.DymeLanguage.Param");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='CONVERGE'
		{
			newLeafNode(otherlv_6, grammarAccess.getFuncionAccess().getCONVERGEKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncionAccess().getInstrInstruccionParserRuleCall_5_0());
				}
				lv_instr_7_0=ruleInstruccion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncionRule());
					}
					add(
						$current,
						"instr",
						lv_instr_7_0,
						"edu.upb.lp.isc.DymeLanguage.Instruccion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncionAccess().getExprExpresionParserRuleCall_6_0());
				}
				lv_expr_8_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_8_0,
						"edu.upb.lp.isc.DymeLanguage.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='GUT'
		{
			newLeafNode(otherlv_9, grammarAccess.getFuncionAccess().getGUTKeyword_7());
		}
		(
			(
				(
					lv_returnTipo_10_0='->'
					{
						newLeafNode(lv_returnTipo_10_0, grammarAccess.getFuncionAccess().getReturnTipoHyphenMinusGreaterThanSignKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncionRule());
						}
						setWithLastConsumed($current, "returnTipo", lv_returnTipo_10_0 != null, "->");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncionAccess().getTipTipoParserRuleCall_8_1_0());
					}
					lv_tip_11_0=ruleTipo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncionRule());
						}
						set(
							$current,
							"tip",
							lv_tip_11_0,
							"edu.upb.lp.isc.DymeLanguage.Tipo");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleLlamadoFunc
entryRuleLlamadoFunc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLlamadoFuncRule()); }
	iv_ruleLlamadoFunc=ruleLlamadoFunc
	{ $current=$iv_ruleLlamadoFunc.current; }
	EOF;

// Rule LlamadoFunc
ruleLlamadoFunc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLlamadoFuncRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getLlamadoFuncAccess().getFuncionFuncionCrossReference_0_0());
				}
			)
		)
		otherlv_1='CONSUME'
		{
			newLeafNode(otherlv_1, grammarAccess.getLlamadoFuncAccess().getCONSUMEKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleExpresion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLlamadoFuncRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"edu.upb.lp.isc.DymeLanguage.Expresion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='$'
				{
					newLeafNode(otherlv_3, grammarAccess.getLlamadoFuncAccess().getDollarSignKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLlamadoFuncAccess().getArgsExpresionParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleExpresion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLlamadoFuncRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"edu.upb.lp.isc.DymeLanguage.Expresion");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='#'
		{
			newLeafNode(otherlv_5, grammarAccess.getLlamadoFuncAccess().getNumberSignKeyword_3());
		}
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='es'
		{
			newLeafNode(otherlv_1, grammarAccess.getParamAccess().getEsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamAccess().getTipTipoParserRuleCall_2_0());
				}
				lv_tip_2_0=ruleTipo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRule());
					}
					set(
						$current,
						"tip",
						lv_tip_2_0,
						"edu.upb.lp.isc.DymeLanguage.Tipo");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInstruccion
entryRuleInstruccion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstruccionRule()); }
	iv_ruleInstruccion=ruleInstruccion
	{ $current=$iv_ruleInstruccion.current; }
	EOF;

// Rule Instruccion
ruleInstruccion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInstruccionAccess().getAsignacionParserRuleCall());
	}
	this_Asignacion_0=ruleAsignacion
	{
		$current = $this_Asignacion_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAsignacion
entryRuleAsignacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsignacionRule()); }
	iv_ruleAsignacion=ruleAsignacion
	{ $current=$iv_ruleAsignacion.current; }
	EOF;

// Rule Asignacion
ruleAsignacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MASA'
		{
			newLeafNode(otherlv_0, grammarAccess.getAsignacionAccess().getMASAKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAsignacionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsignacionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_tipoInferido_2_0='es'
					{
						newLeafNode(lv_tipoInferido_2_0, grammarAccess.getAsignacionAccess().getTipoInferidoEsKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsignacionRule());
						}
						setWithLastConsumed($current, "tipoInferido", lv_tipoInferido_2_0 != null, "es");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAsignacionAccess().getTipTipoParserRuleCall_2_1_0());
					}
					lv_tip_3_0=ruleTipo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsignacionRule());
						}
						set(
							$current,
							"tip",
							lv_tip_3_0,
							"edu.upb.lp.isc.DymeLanguage.Tipo");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='<-'
		{
			newLeafNode(otherlv_4, grammarAccess.getAsignacionAccess().getLessThanSignHyphenMinusKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAsignacionAccess().getValorAsigExpresionParserRuleCall_4_0());
				}
				lv_valorAsig_5_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsignacionRule());
					}
					set(
						$current,
						"valorAsig",
						lv_valorAsig_5_0,
						"edu.upb.lp.isc.DymeLanguage.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='~'
		{
			newLeafNode(otherlv_6, grammarAccess.getAsignacionAccess().getTildeKeyword_5());
		}
	)
;

// Entry rule entryRuleTipo
entryRuleTipo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTipoRule()); }
	iv_ruleTipo=ruleTipo
	{ $current=$iv_ruleTipo.current; }
	EOF;

// Rule Tipo
ruleTipo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='Planeta'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getTipoAccess().getTypePlanetaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTipoRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='Constelacion'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getTipoAccess().getTypeConstelacionKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTipoRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='Estrella'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getTipoAccess().getTypeEstrellaKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTipoRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='PolvoEstelar'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getTipoAccess().getTypePolvoEstelarKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTipoRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='Luna'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getTipoAccess().getTypeLunaKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTipoRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleConstante
entryRuleConstante returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstanteRule()); }
	iv_ruleConstante=ruleConstante
	{ $current=$iv_ruleConstante.current; }
	EOF;

// Rule Constante
ruleConstante returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConstanteRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getConstanteAccess().getNombreAsignacionCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleExpresion
entryRuleExpresion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionRule()); }
	iv_ruleExpresion=ruleExpresion
	{ $current=$iv_ruleExpresion.current; }
	EOF;

// Rule Expresion
ruleExpresion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExprConcatenacionParserRuleCall_0());
		}
		this_ExprConcatenacion_0=ruleExprConcatenacion
		{
			$current = $this_ExprConcatenacion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExprAritmeticaParserRuleCall_1());
		}
		this_ExprAritmetica_1=ruleExprAritmetica
		{
			$current = $this_ExprAritmetica_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExprLogicaParserRuleCall_2());
		}
		this_ExprLogica_2=ruleExprLogica
		{
			$current = $this_ExprLogica_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getLlamadoFuncParserRuleCall_3());
		}
		this_LlamadoFunc_3=ruleLlamadoFunc
		{
			$current = $this_LlamadoFunc_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getConstanteParserRuleCall_4());
		}
		this_Constante_4=ruleConstante
		{
			$current = $this_Constante_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExprConcatenacion
entryRuleExprConcatenacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprConcatenacionRule()); }
	iv_ruleExprConcatenacion=ruleExprConcatenacion
	{ $current=$iv_ruleExprConcatenacion.current; }
	EOF;

// Rule ExprConcatenacion
ruleExprConcatenacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExprConcatenacionAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					(
						lv_operadorCon_1_0='++'
						{
							newLeafNode(lv_operadorCon_1_0, grammarAccess.getExprConcatenacionAccess().getOperadorConPlusSignPlusSignKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExprConcatenacionRule());
							}
							setWithLastConsumed($current, "operadorCon", lv_operadorCon_1_0, "++");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getExprConcatenacionAccess().getExprConExprConcatenacionParserRuleCall_0_1_1_0_0());
							}
							lv_exprCon_2_1=ruleExprConcatenacion
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprConcatenacionRule());
								}
								add(
									$current,
									"exprCon",
									lv_exprCon_2_1,
									"edu.upb.lp.isc.DymeLanguage.ExprConcatenacion");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getExprConcatenacionAccess().getExprConLlamadoFuncParserRuleCall_0_1_1_0_1());
							}
							lv_exprCon_2_2=ruleLlamadoFunc
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprConcatenacionRule());
								}
								add(
									$current,
									"exprCon",
									lv_exprCon_2_2,
									"edu.upb.lp.isc.DymeLanguage.LlamadoFunc");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprConcatenacionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getExprConcatenacionAccess().getConstelacionParserRuleCall_1_0());
			}
			this_Constelacion_4=ruleConstelacion
			{
				$current = $this_Constelacion_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getExprConcatenacionAccess().getEstrellaParserRuleCall_1_1());
			}
			this_Estrella_5=ruleEstrella
			{
				$current = $this_Estrella_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExprAritmetica
entryRuleExprAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprAritmeticaRule()); }
	iv_ruleExprAritmetica=ruleExprAritmetica
	{ $current=$iv_ruleExprAritmetica.current; }
	EOF;

// Rule ExprAritmetica
ruleExprAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExprAritmeticaAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					(
						(
							lv_operadorAr_1_1='+'
							{
								newLeafNode(lv_operadorAr_1_1, grammarAccess.getExprAritmeticaAccess().getOperadorArPlusSignKeyword_0_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprAritmeticaRule());
								}
								setWithLastConsumed($current, "operadorAr", lv_operadorAr_1_1, null);
							}
							    |
							lv_operadorAr_1_2='-'
							{
								newLeafNode(lv_operadorAr_1_2, grammarAccess.getExprAritmeticaAccess().getOperadorArHyphenMinusKeyword_0_1_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprAritmeticaRule());
								}
								setWithLastConsumed($current, "operadorAr", lv_operadorAr_1_2, null);
							}
							    |
							lv_operadorAr_1_3='/'
							{
								newLeafNode(lv_operadorAr_1_3, grammarAccess.getExprAritmeticaAccess().getOperadorArSolidusKeyword_0_1_0_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprAritmeticaRule());
								}
								setWithLastConsumed($current, "operadorAr", lv_operadorAr_1_3, null);
							}
							    |
							lv_operadorAr_1_4='*'
							{
								newLeafNode(lv_operadorAr_1_4, grammarAccess.getExprAritmeticaAccess().getOperadorArAsteriskKeyword_0_1_0_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprAritmeticaRule());
								}
								setWithLastConsumed($current, "operadorAr", lv_operadorAr_1_4, null);
							}
							    |
							lv_operadorAr_1_5='%'
							{
								newLeafNode(lv_operadorAr_1_5, grammarAccess.getExprAritmeticaAccess().getOperadorArPercentSignKeyword_0_1_0_0_4());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprAritmeticaRule());
								}
								setWithLastConsumed($current, "operadorAr", lv_operadorAr_1_5, null);
							}
						)
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getExprAritmeticaAccess().getExprArExprAritmeticaParserRuleCall_0_1_1_0_0());
							}
							lv_exprAr_2_1=ruleExprAritmetica
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprAritmeticaRule());
								}
								add(
									$current,
									"exprAr",
									lv_exprAr_2_1,
									"edu.upb.lp.isc.DymeLanguage.ExprAritmetica");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getExprAritmeticaAccess().getExprArLlamadoFuncParserRuleCall_0_1_1_0_1());
							}
							lv_exprAr_2_2=ruleLlamadoFunc
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprAritmeticaRule());
								}
								add(
									$current,
									"exprAr",
									lv_exprAr_2_2,
									"edu.upb.lp.isc.DymeLanguage.LlamadoFunc");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprAritmeticaAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getExprAritmeticaAccess().getPlanetaParserRuleCall_1_0());
			}
			this_Planeta_4=rulePlaneta
			{
				$current = $this_Planeta_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getExprAritmeticaAccess().getPolvoEstelarParserRuleCall_1_1());
			}
			this_PolvoEstelar_5=rulePolvoEstelar
			{
				$current = $this_PolvoEstelar_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExprLogica
entryRuleExprLogica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprLogicaRule()); }
	iv_ruleExprLogica=ruleExprLogica
	{ $current=$iv_ruleExprLogica.current; }
	EOF;

// Rule ExprLogica
ruleExprLogica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExprLogicaAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					(
						(
							lv_operadorLog_1_1='&&'
							{
								newLeafNode(lv_operadorLog_1_1, grammarAccess.getExprLogicaAccess().getOperadorLogAmpersandAmpersandKeyword_0_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprLogicaRule());
								}
								setWithLastConsumed($current, "operadorLog", lv_operadorLog_1_1, null);
							}
							    |
							lv_operadorLog_1_2='||'
							{
								newLeafNode(lv_operadorLog_1_2, grammarAccess.getExprLogicaAccess().getOperadorLogVerticalLineVerticalLineKeyword_0_1_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprLogicaRule());
								}
								setWithLastConsumed($current, "operadorLog", lv_operadorLog_1_2, null);
							}
							    |
							lv_operadorLog_1_3='$$'
							{
								newLeafNode(lv_operadorLog_1_3, grammarAccess.getExprLogicaAccess().getOperadorLogDollarSignDollarSignKeyword_0_1_0_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprLogicaRule());
								}
								setWithLastConsumed($current, "operadorLog", lv_operadorLog_1_3, null);
							}
							    |
							lv_operadorLog_1_4='!'
							{
								newLeafNode(lv_operadorLog_1_4, grammarAccess.getExprLogicaAccess().getOperadorLogExclamationMarkKeyword_0_1_0_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getExprLogicaRule());
								}
								setWithLastConsumed($current, "operadorLog", lv_operadorLog_1_4, null);
							}
						)
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getExprLogicaAccess().getExprLogExprLogicaParserRuleCall_0_1_1_0_0());
							}
							lv_exprLog_2_1=ruleExprLogica
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprLogicaRule());
								}
								add(
									$current,
									"exprLog",
									lv_exprLog_2_1,
									"edu.upb.lp.isc.DymeLanguage.ExprLogica");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getExprLogicaAccess().getExprLogLlamadoFuncParserRuleCall_0_1_1_0_1());
							}
							lv_exprLog_2_2=ruleLlamadoFunc
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExprLogicaRule());
								}
								add(
									$current,
									"exprLog",
									lv_exprLog_2_2,
									"edu.upb.lp.isc.DymeLanguage.LlamadoFunc");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprLogicaAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getExprLogicaAccess().getLunaParserRuleCall_1());
		}
		this_Luna_4=ruleLuna
		{
			$current = $this_Luna_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlaneta
entryRulePlaneta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlanetaRule()); }
	iv_rulePlaneta=rulePlaneta
	{ $current=$iv_rulePlaneta.current; }
	EOF;

// Rule Planeta
rulePlaneta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0=RULE_INT
			{
				newLeafNode(lv_x_0_0, grammarAccess.getPlanetaAccess().getXINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPlanetaRule());
				}
				setWithLastConsumed(
					$current,
					"x",
					lv_x_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleConstelacion
entryRuleConstelacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstelacionRule()); }
	iv_ruleConstelacion=ruleConstelacion
	{ $current=$iv_ruleConstelacion.current; }
	EOF;

// Rule Constelacion
ruleConstelacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0=RULE_STRING
			{
				newLeafNode(lv_x_0_0, grammarAccess.getConstelacionAccess().getXSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConstelacionRule());
				}
				setWithLastConsumed(
					$current,
					"x",
					lv_x_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleEstrella
entryRuleEstrella returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEstrellaRule()); }
	iv_ruleEstrella=ruleEstrella
	{ $current=$iv_ruleEstrella.current; }
	EOF;

// Rule Estrella
ruleEstrella returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_x_0_0='a'
			{
				newLeafNode(lv_x_0_0, grammarAccess.getEstrellaAccess().getXAKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEstrellaRule());
				}
				setWithLastConsumed($current, "x", lv_x_0_0, "a");
			}
		)
	)
;

// Entry rule entryRulePolvoEstelar
entryRulePolvoEstelar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolvoEstelarRule()); }
	iv_rulePolvoEstelar=rulePolvoEstelar
	{ $current=$iv_rulePolvoEstelar.current; }
	EOF;

// Rule PolvoEstelar
rulePolvoEstelar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPolvoEstelarAccess().getXDoubleParserRuleCall_0());
			}
			lv_x_0_0=ruleDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPolvoEstelarRule());
				}
				set(
					$current,
					"x",
					lv_x_0_0,
					"edu.upb.lp.isc.DymeLanguage.Double");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleLuna
entryRuleLuna returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLunaRule()); }
	iv_ruleLuna=ruleLuna
	{ $current=$iv_ruleLuna.current; }
	EOF;

// Rule Luna
ruleLuna returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_x_0_1='LunaNueva'
				{
					newLeafNode(lv_x_0_1, grammarAccess.getLunaAccess().getXLunaNuevaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLunaRule());
					}
					setWithLastConsumed($current, "x", lv_x_0_1, null);
				}
				    |
				lv_x_0_2='LunaLlena'
				{
					newLeafNode(lv_x_0_2, grammarAccess.getLunaAccess().getXLunaLlenaKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLunaRule());
					}
					setWithLastConsumed($current, "x", lv_x_0_2, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
